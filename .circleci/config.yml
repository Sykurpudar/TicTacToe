# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:      
  deploy-staging:
    docker: 
      - image: circleci/node:7.10

    
    steps:
      - checkout
      - run: 
          name: Deploy to Staging
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_STAGING_APP.git
        
  test:
    docker:
      - image: circleci/node:latest-browsers

    working_directory: ~/repo


    steps:
      - checkout
            # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      - run: npm test
          # Run scripts that converts .md documentation files to .pdf
      - run: 
          name: Convert to pdf
          command: node toPDF.js
          
          # Store those artifacts in circleci artifacts
      - store_artifacts:
          path: ./artifacts
      - run:
          name: send test results to sykur-testresults
          command: cd testData/lcov-report && git config --global user.email "hrefna17@ru.is" && git config --global user.name "KodingKin" && git init && git add . && git commit -m "required text" && git push --set-upstream https://heroku:2d2c52ee-bcb0-4661-ba10-f3fd959ddd38@git.heroku.com/sykur-testresults.git master

  deploy-production:
    docker:
      - image: circleci/node:7.10

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Deploy to production on Heroku
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_PRODUCTION_APP.git



workflows:
  version: 2
  workflow:
    jobs:
      - deploy-staging
      - test:
          requires:
            - deploy-staging
      - deploy-production:
          requires:
            - test
          filters:
            branches:
              only: master
